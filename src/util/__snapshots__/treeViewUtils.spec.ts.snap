// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`getPanelConnectionTreeItem > should return panel connection tree item: isConnected:false, isInitialized:false 1`] = `
{
  "collapsibleState": 2,
  "description": undefined,
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
}
`;

exports[`getPanelConnectionTreeItem > should return panel connection tree item: isConnected:false, isInitialized:true 1`] = `
{
  "collapsibleState": 2,
  "description": "python",
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
}
`;

exports[`getPanelConnectionTreeItem > should return panel connection tree item: isConnected:true, isInitialized:false 1`] = `
{
  "collapsibleState": 2,
  "description": undefined,
  "iconPath": {
    "color": undefined,
    "id": "vm-connect",
  },
  "label": "localhost:10000",
}
`;

exports[`getPanelConnectionTreeItem > should return panel connection tree item: isConnected:true, isInitialized:true 1`] = `
{
  "collapsibleState": 2,
  "description": "python",
  "iconPath": {
    "color": undefined,
    "id": "vm-connect",
  },
  "label": "localhost:10000",
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:Figure 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "Figure",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "graph",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:HierarchicalTable 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "HierarchicalTable",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-table",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:OtherWidget 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "OtherWidget",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "preview",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:PartitionedTable 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "PartitionedTable",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-table",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:Table 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "Table",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-table",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:TableMap 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "TableMap",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-table",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:TreeTable 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "TreeTable",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-table",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:Treemap 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "Treemap",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "preview",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:deephaven.plot.express.DeephavenFigure 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "deephaven.plot.express.DeephavenFigure",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "graph",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:deephaven.ui.Element 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "deephaven.ui.Element",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "preview",
  },
}
`;

exports[`getPanelVariableTreeItem > should return panel variable tree item: type:pandas.DataFrame 1`] = `
{
  "command": {
    "arguments": [
      "http://localhost:10000/",
      [
        {
          "title": "some title",
          "type": "pandas.DataFrame",
        },
      ],
    ],
    "command": "vscode-deephaven.openVariablePanels",
    "title": "Open Panel",
  },
  "description": "some title",
  "iconPath": {
    "color": undefined,
    "id": "dh-pandas",
  },
}
`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=false, isManaged=false, isRunning=false 1`] = `"isServerStopped"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=false, isManaged=false, isRunning=true 1`] = `"isServerRunningDisconnected"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=false, isManaged=true, isRunning=false 1`] = `"isManagedServerConnecting"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=false, isManaged=true, isRunning=true 1`] = `"isManagedServerDisconnected"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=true, isManaged=false, isRunning=false 1`] = `"isServerStopped"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=true, isManaged=false, isRunning=true 1`] = `"isServerRunningConnected"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=true, isManaged=true, isRunning=false 1`] = `"isManagedServerConnected"`;

exports[`getServerContextValue > should return contextValue based on server state: isConnected=true, isManaged=true, isRunning=true 1`] = `"isManagedServerConnected"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=0, isManaged=false, label=some label 1`] = `"some label"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=0, isManaged=false, label=undefined 1`] = `""`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=0, isManaged=true, label=some label 1`] = `"pip some label"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=0, isManaged=true, label=undefined 1`] = `"pip"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=1, isManaged=false, label=some label 1`] = `"some label (1)"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=1, isManaged=false, label=undefined 1`] = `"(1)"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=1, isManaged=true, label=some label 1`] = `"pip some label (1)"`;

exports[`getServerDescription > should return server description based on parameters: connectionCount=1, isManaged=true, label=undefined 1`] = `"pip (1)"`;

exports[`getServerGroupContextValue > should return context value when servers can be managed: group=Managed, canStartServer=false 1`] = `undefined`;

exports[`getServerGroupContextValue > should return context value when servers can be managed: group=Managed, canStartServer=true 1`] = `"canStartServer"`;

exports[`getServerGroupContextValue > should return context value when servers can be managed: group=Running, canStartServer=false 1`] = `undefined`;

exports[`getServerGroupContextValue > should return context value when servers can be managed: group=Running, canStartServer=true 1`] = `undefined`;

exports[`getServerGroupTreeItem > should return server group tree item: group=Managed, canStartServer=false 1`] = `
{
  "collapsibleState": 2,
  "contextValue": undefined,
  "iconPath": {
    "color": undefined,
    "id": "server",
  },
  "label": "Managed",
}
`;

exports[`getServerGroupTreeItem > should return server group tree item: group=Managed, canStartServer=true 1`] = `
{
  "collapsibleState": 2,
  "contextValue": "canStartServer",
  "iconPath": {
    "color": undefined,
    "id": "server",
  },
  "label": "Managed",
}
`;

exports[`getServerGroupTreeItem > should return server group tree item: group=Running, canStartServer=false 1`] = `
{
  "collapsibleState": 2,
  "contextValue": undefined,
  "iconPath": {
    "color": undefined,
    "id": "server",
  },
  "label": "Running",
}
`;

exports[`getServerGroupTreeItem > should return server group tree item: group=Running, canStartServer=true 1`] = `
{
  "collapsibleState": 2,
  "contextValue": undefined,
  "iconPath": {
    "color": undefined,
    "id": "server",
  },
  "label": "Running",
}
`;

exports[`getServerIconID > should return icon id based on server state: isConnected=false, isManaged=false, isRunning=false 1`] = `"circle-slash"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=false, isManaged=false, isRunning=true 1`] = `"circle-large-outline"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=false, isManaged=true, isRunning=false 1`] = `"sync~spin"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=false, isManaged=true, isRunning=true 1`] = `"circle-large-outline"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=true, isManaged=false, isRunning=false 1`] = `"circle-slash"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=true, isManaged=false, isRunning=true 1`] = `"circle-large-filled"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=true, isManaged=true, isRunning=false 1`] = `"sync~spin"`;

exports[`getServerIconID > should return icon id based on server state: isConnected=true, isManaged=true, isRunning=true 1`] = `"circle-large-filled"`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=false, isManaged=false, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isServerStopped",
  "description": "",
  "iconPath": {
    "color": undefined,
    "id": "circle-slash",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=false, isManaged=false, isRunning=true 1`] = `
{
  "command": {
    "arguments": [
      {
        "connectionCount": 0,
        "isConnected": false,
        "isManaged": false,
        "isRunning": true,
        "type": "DHC",
        "url": "http://localhost:10000/",
      },
    ],
    "command": "vscode-deephaven.connectToServer",
    "title": "Connect to server",
  },
  "contextValue": "isServerRunningDisconnected",
  "description": "",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-outline",
  },
  "label": "localhost:10000",
  "tooltip": "Click to connect to http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=false, isManaged=true, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnecting",
  "description": "pip",
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=false, isManaged=true, isRunning=true 1`] = `
{
  "command": {
    "arguments": [
      {
        "connectionCount": 0,
        "isConnected": false,
        "isManaged": true,
        "isRunning": true,
        "psk": "mock.psk",
        "type": "DHC",
        "url": "http://localhost:10000/",
      },
    ],
    "command": "vscode-deephaven.connectToServer",
    "title": "Connect to server",
  },
  "contextValue": "isManagedServerDisconnected",
  "description": "pip",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-outline",
  },
  "label": "localhost:10000",
  "tooltip": "Click to connect to http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=true, isManaged=false, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isServerStopped",
  "description": "(1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-slash",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=true, isManaged=false, isRunning=true 1`] = `
{
  "command": undefined,
  "contextValue": "isServerRunningConnected",
  "description": "(1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-filled",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=true, isManaged=true, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnected",
  "description": "pip (1)",
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHC, isConnected=true, isManaged=true, isRunning=true 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnected",
  "description": "pip (1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-filled",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=false, isManaged=false, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isServerStopped",
  "description": "",
  "iconPath": {
    "color": undefined,
    "id": "circle-slash",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=false, isManaged=false, isRunning=true 1`] = `
{
  "command": {
    "arguments": [
      {
        "connectionCount": 0,
        "isConnected": false,
        "isManaged": false,
        "isRunning": true,
        "type": "DHE",
        "url": "http://localhost:10000/",
      },
    ],
    "command": "vscode-deephaven.connectToServer",
    "title": "Connect to server",
  },
  "contextValue": "isDHEServerRunning",
  "description": "",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-outline",
  },
  "label": "localhost:10000",
  "tooltip": "Click to connect to http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=false, isManaged=true, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnecting",
  "description": "pip",
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=false, isManaged=true, isRunning=true 1`] = `
{
  "command": {
    "arguments": [
      {
        "connectionCount": 0,
        "isConnected": false,
        "isManaged": true,
        "isRunning": true,
        "psk": "mock.psk",
        "type": "DHE",
        "url": "http://localhost:10000/",
      },
    ],
    "command": "vscode-deephaven.connectToServer",
    "title": "Connect to server",
  },
  "contextValue": "isManagedServerDisconnected",
  "description": "pip",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-outline",
  },
  "label": "localhost:10000",
  "tooltip": "Click to connect to http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=true, isManaged=false, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isServerStopped",
  "description": "(1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-slash",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=true, isManaged=false, isRunning=true 1`] = `
{
  "command": {
    "arguments": [
      {
        "connectionCount": 1,
        "isConnected": true,
        "isManaged": false,
        "isRunning": true,
        "type": "DHE",
        "url": "http://localhost:10000/",
      },
    ],
    "command": "vscode-deephaven.connectToServer",
    "title": "Connect to server",
  },
  "contextValue": "isDHEServerRunning",
  "description": "(1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-filled",
  },
  "label": "localhost:10000",
  "tooltip": "Click to connect to http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=true, isManaged=true, isRunning=false 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnected",
  "description": "pip (1)",
  "iconPath": {
    "color": undefined,
    "id": "sync~spin",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getServerTreeItem > should return server tree item: type=DHE, isConnected=true, isManaged=true, isRunning=true 1`] = `
{
  "command": undefined,
  "contextValue": "isManagedServerConnected",
  "description": "pip (1)",
  "iconPath": {
    "color": undefined,
    "id": "circle-large-filled",
  },
  "label": "localhost:10000",
  "tooltip": "http://localhost:10000/",
}
`;

exports[`getVariableIconPath > should return icon path for variableType 1`] = `
[
  [
    "deephaven.plot.express.DeephavenFigure",
    {
      "color": undefined,
      "id": "graph",
    },
  ],
  [
    "deephaven.ui.Element",
    {
      "color": undefined,
      "id": "preview",
    },
  ],
  [
    "Figure",
    {
      "color": undefined,
      "id": "graph",
    },
  ],
  [
    "HierarchicalTable",
    {
      "color": undefined,
      "id": "dh-table",
    },
  ],
  [
    "OtherWidget",
    {
      "color": undefined,
      "id": "preview",
    },
  ],
  [
    "pandas.DataFrame",
    {
      "color": undefined,
      "id": "dh-pandas",
    },
  ],
  [
    "PartitionedTable",
    {
      "color": undefined,
      "id": "dh-table",
    },
  ],
  [
    "Table",
    {
      "color": undefined,
      "id": "dh-table",
    },
  ],
  [
    "TableMap",
    {
      "color": undefined,
      "id": "dh-table",
    },
  ],
  [
    "Treemap",
    {
      "color": undefined,
      "id": "preview",
    },
  ],
  [
    "TreeTable",
    {
      "color": undefined,
      "id": "dh-table",
    },
  ],
]
`;

exports[`groupServers > should group servers by state 1`] = `
{
  "managed": [
    {
      "isManaged": true,
      "isRunning": true,
      "psk": "mock.psk",
      "type": "DHC",
      "url": "http://localhost:10000/",
    },
    {
      "isManaged": true,
      "isRunning": true,
      "psk": "mock.psk",
      "type": "DHC",
      "url": "http://localhost:10001/",
    },
    {
      "isManaged": true,
      "isRunning": false,
      "psk": "mock.psk",
      "type": "DHC",
      "url": "http://localhost:10002/",
    },
    {
      "isManaged": true,
      "isRunning": false,
      "psk": "mock.psk",
      "type": "DHC",
      "url": "http://localhost:10003/",
    },
  ],
  "running": [
    {
      "isManaged": false,
      "isRunning": true,
      "psk": undefined,
      "type": "DHC",
      "url": "http://localhost:10004/",
    },
    {
      "isManaged": false,
      "isRunning": true,
      "psk": undefined,
      "type": "DHC",
      "url": "http://localhost:10005/",
    },
  ],
  "stopped": [
    {
      "isManaged": false,
      "isRunning": false,
      "psk": undefined,
      "type": "DHC",
      "url": "http://localhost:10006/",
    },
    {
      "isManaged": false,
      "isRunning": false,
      "psk": undefined,
      "type": "DHC",
      "url": "http://localhost:10007/",
    },
  ],
}
`;
